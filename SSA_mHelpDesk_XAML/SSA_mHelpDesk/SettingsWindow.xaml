<Window x:Class="SSA_mHelpDesk.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SSA_mHelpDesk"
        xmlns:domain="clr-namespace:SSA_mHelpDesk.Domain"
        mc:Ignorable="d"
        Title="Settings" Height="519" Width="635"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}" Initialized="Window_Initialized" Closing="Window_Closing">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0,0,0,8"
                      x:Name="ScrollViewer">
            <StackPanel Grid.Row="0" Margin="8">
                <GroupBox Header="Account Information" Margin="0,0,0,16" x:Name="AccountInfoGroup">
                    <StackPanel>
                        <PasswordBox 
                        x:Name="ApiKey"
                        Margin="8,0,8,16"
                        materialDesign:HintAssist.Hint="Api Key"
                        materialDesign:HintAssist.FloatingScale="1.1"
                        local:PasswordBoxAssistant.BindPassword="True"
                        Style="{StaticResource MaterialDesignFloatingHintPasswordBox}" >
                            <local:PasswordBoxAssistant.BoundPassword>
                                <Binding Path="ApiKeyString" Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" ValidatesOnExceptions="True">
                                    <Binding.ValidationRules>
                                        <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </local:PasswordBoxAssistant.BoundPassword>
                        </PasswordBox>
                        <PasswordBox 
                        x:Name="Secret"
                        Margin="8,0,8,16"
                        materialDesign:HintAssist.Hint="Secret"
                        materialDesign:HintAssist.FloatingScale="1.1"
                        local:PasswordBoxAssistant.BindPassword="True"
                        Style="{StaticResource MaterialDesignFloatingHintPasswordBox}" 
                            Password="2">
                            <local:PasswordBoxAssistant.BoundPassword>
                                <Binding Path="SecretString" Mode="TwoWay"
                                    UpdateSourceTrigger="PropertyChanged" ValidatesOnDataErrors="True" ValidatesOnExceptions="True">
                                    <Binding.ValidationRules>
                                        <domain:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </local:PasswordBoxAssistant.BoundPassword>
                        </PasswordBox>
                        <TextBox
                            x:Name="PortalId"
                            PreviewTextInput="NumberValidationTextBox"
                            MaxLength="7"
                            Margin="8,0,8,16"
                            materialDesign:HintAssist.Hint="Account #"
                            materialDesign:HintAssist.FloatingScale="1.1"
                            Style="{StaticResource MaterialDesignFloatingHintTextBox}" >
                            <TextBox.Text>
                                <Binding RelativeSource="{RelativeSource Self}" Path="Text"
                                    UpdateSourceTrigger="Explicit" >
                                    <Binding.ValidationRules>
                                        <domain:NumericValidationRule Min="1"  ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <StackPanel Orientation="Horizontal">
                            <ComboBox
                              x:Name="AccountType"
                              materialDesign:HintAssist.Hint="Account Type"
                              Margin="8,0,8,8"
                              MinWidth="100"
                              SelectionChanged="AccountType_SelectionChanged"
                              materialDesign:HintAssist.FloatingScale="0.9"
                                VerticalAlignment="Bottom"
                              Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                                <ComboBoxItem>Production</ComboBoxItem>
                                <ComboBoxItem>Development</ComboBoxItem>
                            </ComboBox>
                            <CheckBox
                                x:Name="BearerWorkaround"
                                Margin="24,0,0,0"
                                IsEnabled="False"
                                Style="{StaticResource MaterialDesignCheckBox}"
                                >Use Production 'bearer' workaround
                                <!--<CheckBox.Style>
                                    <Style BasedOn="{StaticResource MaterialDesignCheckBox}"
                                           TargetType="CheckBox">
                                        <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=AccountType, Path=SelectedIndex}"
                                                     Value="0">
                                                <Setter Property="CheckBox.IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                                </CheckBox.Style>-->
                            </CheckBox>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox Header="Authenticaion" Margin="0,0,0,16">
                    <StackPanel>
                        <DockPanel Margin="8, 0, 8, 12">
                            <!--<StackPanel Orientation="Horizontal"
                                    Margin="8, 0, 8, 8">-->
                            <ProgressBar 
                                x:Name="AccessTokenProgress"
                                Style="{StaticResource MaterialDesignCircularProgressBar}"
                                Value="0"
                                IsIndeterminate="True"/>

                            <Ellipse
                                x:Name="AccessTokenValidIndicator"
                                Visibility="Collapsed"
                                Height="12"
                                Width="12"
                                StrokeThickness="0.15"
                                Stroke="Black"
                                materialDesign:ShadowAssist.ShadowDepth="Depth4"
                                materialDesign:ShadowAssist.ShadowEdges="All"
                                DockPanel.Dock="Left">
                                <Ellipse.Fill>
                                    <Binding Path="KeyIndicatorColor" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
                                </Ellipse.Fill>
                            </Ellipse>
                            <TextBlock
                                       x:Name="AccessTokenValidText"
                                       Foreground="#C0000000"
                                       Margin="8,0,0,0" 
                                       VerticalAlignment="Center"
                                       DockPanel.Dock="Left"
                                       >Your access token is valid until 01/23/45 at 12:11:10 AM</TextBlock>
                            <!--</StackPanel>-->
                            <Button x:Name="ViewAccessToken" Click="ViewAccessToken_Click"
                                    Height="20" Padding="2, 0, 2, 0"
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    HorizontalAlignment="Right"
                                    DockPanel.Dock="Right">View Access Token</Button>
                        </DockPanel>
                        <!--<TextBox 
                        Margin="8,0,8,8"
                        materialDesign:HintAssist.Hint="Access Token"
                        materialDesign:HintAssist.FloatingScale="1.1"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}" />-->
                        <StackPanel 
                            x:Name="RefreshKeyRow"
                            Orientation="Horizontal"
                                    Margin="8, 0, 8, 0">
                            <Button 
                                x:Name="ShowRefreshKey"
                                Click="ShowRefreshKey_Click" Visibility="Visible">View Refresh Token</Button>
                            <TextBox
                                x:Name="RefreshToken"
                                Visibility="Hidden"
                                MinWidth="300"
                                materialDesign:HintAssist.Hint="Refresh Token"
                                materialDesign:HintAssist.FloatingScale="1.1"
                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                Text="f285fdd6a97e98ed3536e78d2f0866af"/>
                            <Button
                                x:Name="RefreshTokenButton"
                                Click="RefreshTokenButton_Click"
                                Margin="16,0,0,0" 
                                Visibility="Collapsed">Refresh Now</Button>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
        <StackPanel Grid.Row="1" 
                    Orientation="Horizontal" 
                    HorizontalAlignment="Right" 
                    VerticalAlignment="Bottom"
                    Margin="8, 0, 8, 8" 
                    materialDesign:ShadowAssist.ShadowDepth="Depth5"
                    materialDesign:ShadowAssist.ShadowEdges="Top"
                    materialDesign:ShadowAssist.Darken="True">
            <Button Margin="8,0" Click="Button_Click_Save" IsDefault="True">Save</Button>
            <Button Click="Button_Click_Cancel" IsCancel="True">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
